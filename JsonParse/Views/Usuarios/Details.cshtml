@model ReflectionIT.Mvc.Paging.PagingList<JsonParse.Models.Conta>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, Reflection.Mvc.Paging
@{
    ViewData["title"] = "Detalhes de contas";
    var data = ViewBag.UsuarioData;
    var total = ViewBag.total;
    var common = ViewBag.common;
    var max = ViewBag.max;
    var min = ViewBag.min;
    var countFuture = ViewBag.countFuture;
}

<div class="row">
    <div class="col-sm-12 col-md-6">
        <h1 class="mb-4">Detalhamento de contas</h1>
    </div>
    <div class="mb-3 mb-md-0 col-sm-12 col-md-6 d-flex align-items-sm-start justify-content-sm-start align-items-md-center justify-content-md-end">
        <form method="get" class="form-inline" asp-controller="Usuarios" asp-action="Details">
            <input type="text" class="form-control mr-2" style="width: 140px;" name="SearchString" placeholder="Buscar por..." value="@Model.RouteValue["SearchString"]">
            <button class="btn btn-outline-primary" type="submit"><i class="fas fa-search"></i></button>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-6 mb-3">
        <div class="card align-content-center h-100">
            <div class="card-body">
                <h2 class="card-title">Informações do cliente</h2>
                <p class="card-text"><i class="fas fa-pencil-alt mr-2"></i>Nome: @data.Nome</p>
                <p class="card-text"><i class="fas fa-at mr-2"></i>Email: @data.Email</p>
                <p class="card-text"><i class="fas fa-phone mr-2"></i>Fone: @data.Fone</p>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-6 mb-3">
        <div class="card align-content-center h-100">
            <div class="card-body">
                <h2 class="card-title">Detalhes de contas</h2>
                <p class="card-text">Total de contas: @total</p>
                <p class="card-text">Pagamento mais comum: @common</p>
                <p class="card-text">Maior valor pago: @max.ToString("C")</p>
                <p class="card-text">Menor valor pago: @min.ToString("C")</p>
            </div>
        </div>
    </div>
</div>
@if (countFuture > 0)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @data.Nome.Split(' ')[0] possui <strong>@countFuture</strong> pagamento(s) a vencer.
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@{
    this.Model.Action = "Details";
}
<table class="table table-striped">
    <thead>
        <tr>
            <th class="align-middle">
                @Html.SortableHeaderFor(model => model.Titulo)
            </th>
            <th class="align-middle">
                @Html.SortableHeaderFor(model => model.Resumo)
            </th>
            <th class="align-middle">
                @Html.SortableHeaderFor(model => model.Valor)
            </th>
            <th class="align-middle">
                @Html.SortableHeaderFor(model => model.Vencimento)
            </th>
            <th class="align-middle">
                <a class="btn btn-primary" asp-controller="Contas" asp-action="Create" asp-route-id="@data.UsuarioId"><i class="fas fa-plus-circle"></i> Cadastrar</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Titulo)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Resumo)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Valor)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Vencimento)
                </td>
                <td class="align-middle">
                    <div class="dropdown">
                        <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-cog"></i> Ações
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" asp-controller="Contas" asp-action="Edit" asp-route-id="@item.ContaId"><i class="fas fa-user-edit text-primary"></i> Editar</a>
                            <a class="dropdown-item" asp-controller="Contas" asp-action="Delete" asp-route-id="@item.ContaId" onclick="return confirm('Você tem certeza disso?')"><i class="fas fa-trash text-danger"></i> Deletar</a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Cliente paging">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>